name: Scene Builder MacOS Bundles
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: joschi/setup-jdk@v2
        with:
          java-version: 16
          architecture: 'aarch64'
      - name: Store Variables
        id: variables
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          VERSION=$TAG
          echo ::set-output name=SOURCE_TAG::$TAG
          echo ::set-output name=SOURCE_VERSION::$VERSION
        shell: bash
      - name: Setup JavaFX
        run: |
          wget -P /tmp https://download2.gluonhq.com/openjfx/17/openjfx-17-ea+14_osx-aarch64_bin-jmods.zip
          unzip /tmp/openjfx-17-ea+14_osx-aarch64_bin-jmods.zip -d /tmp
      - name: Build and package JAR
        run: |
          mvn -q versions:set -DnewVersion=${{ env.VERSION }} -DgenerateBackupPoms=false
          mvn -q package -Dmaven.test.skip=true -X
        env:
          VERSION: ${{ steps.variables.outputs.SOURCE_VERSION }}
      - name: Create Bundle using JPackage
        id: outputfile
        run: |
          .github/scripts/jpackage.sh \
          --icon app/assets/osx/icon-mac.icns \
          --java-options '"--add-opens=javafx.fxml/javafx.fxml=ALL-UNNAMED"' \
          --type dmg \
          --mac-package-identifier com.gluonhq.scenebuilder \
          --mac-package-name 'Scene Builder' \
          mv $INSTALL_DIR/SceneBuilder-${{ env.VERSION }}.dmg $INSTALL_DIR/SceneBuilder-${{ env.TAG }}.dmg
          ls $INSTALL_DIR
          echo ::set-output name=path::$INSTALL_DIR/SceneBuilder-${{ env.TAG }}.dmg
        env:
          MAIN_CLASS: com.oracle.javafx.scenebuilder.app.SceneBuilderApp
          JAVAFX_HOME: /tmp/javafx-jmods-16/
          JPACKAGE_HOME: ${{ env.JAVA_HOME }}
          TAG: ${{ steps.variables.outputs.SOURCE_TAG }}
          VERSION: ${{ steps.variables.outputs.SOURCE_VERSION }}
          INSTALL_DIR: app/target/install
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: SceneBuilder-${{ runner.os }}
          path: ${{ steps.outputfile.outputs.path }}
      - name: Release nightly build
        uses: ncipollo/release-action@v1.8.6
        with:
          allowUpdates: true
          name: ${{ env.VERSION }}
          artifacts: app/target/install/*
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
